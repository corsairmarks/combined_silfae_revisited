###################
# Gestalt Job Overrides
###################

# Modified: Holowarriors and Hologenotypes want to work this job due to army bonuses and other Holofrixit want to avoid it
# Modified: was missing weight for presapient proles, which buffs armies - added that weight too
patrol_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { can_think = yes }
	resources = {
		category = planet_jobs
		produces = {
			unity = 1
		}
	}

	planet_modifier = {
		planet_crime_no_happiness_add = -20
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|patrol_drone|RESOURCE|unity|FACTOR|0.25|
		modifier = {
			factor = 50
			planet = { planet_crime > 22 }
		}
		modifier = {
			weight = 20
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 3
			has_trait = trait_resilient
		}
		modifier = {
			factor = 3
			planet = { planet_crime > 0 }
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 2
			planet = { planet_crime > 0 }
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.1
			has_trait = trait_presapient_proles
		}
		modifier = {
			factor = 0.5
			has_trait = trait_holofrixit
			NOR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
	}
}

# Modified: Holowarriors and Hologenotypes want to work this job due to army bonuses and other Holofrixit want to avoid it
# Modified: was missing weight for presapient proles, which buffs armies - added that weight too
warrior_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	country_modifier = {
		country_naval_cap_add = 4
	}

	resources = {
		category = planet_soldiers
	}

	triggered_country_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		modifier = {
			planet_stability_add = 1
		}
		mult = planet.modifier:job_soldier_stability_add
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	weight = {
		weight = 5
		modifier = {
			weight = 100
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 10
			planet = {
				OR = {
					has_modifier = compliance_protocols
					has_modifier = hunter_killer_drones
				}
			}
		}
		modifier = {
			factor = 4
			has_trait = trait_resilient
		}
		modifier = {
			factor = 4
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 3
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 0
			planet = { num_pops < 12 }
			owner = { is_ai = yes }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.1
			has_trait = trait_presapient_proles
		}
		modifier = {
			factor = 0.5
			has_trait = trait_holofrixit
			NOR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
	}
}