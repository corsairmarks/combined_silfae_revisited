###################
# Gestalt Job Overrides
###################

# Modified: uses complex_drone_job_check_trigger for possible
coordinator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_machine_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { complex_drone_job_check_trigger = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 4
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_active_building = building_league_offices }
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_machine }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|coordinator|RESOURCE|unity|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}

# Modified: uses complex_drone_job_check_trigger for possible
evaluator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_holo_theatres # building_simulation_1 uses building_holo_theatres as its icon - probably what was intended by the game designers when they wrote "building_simulation_1" here

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { complex_drone_job_check_trigger = yes }

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_integrated_preservation }
		}
		modifier = {
			planet_crime_no_happiness_add = -3
		}
	}

	triggered_planet_modifier = {
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|evaluator|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

# Modified: uses complex_drone_job_check_trigger for possible
synapse_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_hive_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { complex_drone_job_check_trigger = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = { is_lithoid = no }
			food = 2
			energy = 2
		}
		upkeep = {
			trigger = { is_lithoid = yes }
			minerals = 2
			energy = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = planet_artifact_relays_hivemind }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_active_building = building_league_offices }
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}


	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_instinctive_synchronization }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|synapse_drone|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

# Modified: uses complex_drone_job_check_trigger for possible
brain_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { complex_drone_job_check_trigger = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 4
			engineering_research = 4
			society_research = 4
		}
		upkeep = {
			minerals = 6
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			minerals = 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				exists = planet
				planet = { has_planet_flag = has_science_ministry }
			}
			physics_research = 2
			engineering_research = 2
			society_research = 2
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|brain_drone|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}

# Modified: uses complex_drone_job_check_trigger for possible
calculator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { complex_drone_job_check_trigger = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 4
			engineering_research = 4
			society_research = 4
		}
		upkeep = {
			energy = 4
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_planet_flag = has_science_ministry }
			}
			energy = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				exists = planet
				planet = { has_planet_flag = has_science_ministry }
			}
			physics_research = 2
			engineering_research = 2
			society_research = 2
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|calculator|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}

# Modified: Holowarriors and Hologenotypes want to work this job due to army bonuses and other Holofrixit want to avoid it
# Modified: was missing weight for presapient proles, which buffs armies - added that weight too
patrol_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = { can_think = yes }
	resources = {
		category = planet_jobs
		produces = {
			unity = 1
		}
	}

	planet_modifier = {
		planet_crime_no_happiness_add = -20
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|patrol_drone|RESOURCE|unity|FACTOR|0.25|
		modifier = {
			factor = 50
			planet = { planet_crime > 22 }
		}
		modifier = {
			weight = 20
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 3
			has_trait = trait_resilient
		}
		modifier = {
			factor = 3
			planet = { planet_crime > 0 }
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 2
			planet = { planet_crime > 0 }
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 3
			has_trait = trait_noxious
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.1
			has_trait = trait_presapient_proles
		}
		modifier = {
			factor = 0.5
			has_trait = trait_holofrixit
			NOR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
	}
}

# Modified: Holowarriors and Hologenotypes want to work this job due to army bonuses and other Holofrixit want to avoid it
# Modified: was missing weight for presapient proles, which buffs armies - added that weight too
warrior_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	country_modifier = {
		country_naval_cap_add = 4
	}

	resources = {
		category = planet_soldiers
	}

	triggered_country_modifier = {
		potential = {
			exists = planet
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		modifier = {
			planet_stability_add = 1
		}
		mult = planet.modifier:job_soldier_stability_add
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	weight = {
		weight = 5
		modifier = {
			weight = 100
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 10
			exists = planet
			planet = {
				OR = {
					has_modifier = compliance_protocols
					has_modifier = hunter_killer_drones
				}
			}
		}
		modifier = {
			factor = 4
			has_trait = trait_resilient
		}
		modifier = {
			factor = 4
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 3
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 0
			planet = { num_pops < 12 }
			owner = { is_ai = yes }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 3
			has_trait = trait_noxious
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.1
			has_trait = trait_presapient_proles
		}
		modifier = {
			factor = 0.5
			has_trait = trait_holofrixit
			NOR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_trait = trait_holowarrior
				has_trait = trait_holowarrior_2
			}
		}
	}
}

# Modified: uses complex_drone_job_check_trigger for possible
chronicle_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_galactic_memorial_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_drone_job
	possible = { complex_drone_job_check_trigger = yes }

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = { is_robotic_species = yes }
			minerals = 1
			energy = 2
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			energy = 1
			food = 2
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			energy = 1
			food = 1
		}
		upkeep = {
			trigger = { has_phototrophic_energy_upkeep = yes }
			energy = 1
		}
		upkeep = {
			trigger = { has_mineral_upkeep = yes }
			energy = 1
			minerals = 2
		}
	}

	planet_modifier = {
		planet_stability_add = 2.5
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_integrated_preservation }
		}
		modifier = {
			planet_crime_no_happiness_add = -3
		}
	}

	triggered_planet_modifier = {
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|chronicle_drone|RESOURCE1|unity|WEIGHT1|0.7|RESOURCE2|society_research|WEIGHT2|0.3|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}