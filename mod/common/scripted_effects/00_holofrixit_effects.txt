# generate specialized holofrixit castes and initial Pops for each
# THIS = planet
generate_holofrixit_start_pops = {
	owner = { save_event_target_as = holofrixit_country }
	FROM = { save_event_target_as = holooverseer_species }
	# founders are the xechiros
	while = {
		count = 2
		create_pop = {
			species = event_target:holooverseer_species
			ethos = event_target:holofrixit_country
		}
	}

	# hologanglions
	create_species = {
		is_mod = no
		name = NAME_ganglion
		plural = NAME_ganglion_plural
		adjective = NAME_ganglion_adjective
		name_list = event_target:holooverseer_species
		class = event_target:holooverseer_species
		homeworld = THIS
		traits = event_target:holooverseer_species
		# pops_can_be_colonizers = no
		# pops_can_reproduce = no
	}
	modify_species = {
		species = last_created_species
		change_scoped_species = yes
		remove_trait = trait_holooverseer
		add_trait = trait_hologanglion
		effect = {
			change_species_portrait = holofrixit_scientist_01
			# change_species_characteristics = {
			# 	pops_can_be_colonizers = no
			# 	pops_can_reproduce = no
			# }
			set_citizenship_type = {
				type = citizenship_slavery
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_living_standard = {
				type = living_standard_normal
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_slavery_type = {
				type = slavery_indentured
				country = event_target:holofrixit_country
				cooldown = no
			}
			save_event_target_as = hologanglion_species
		}
	}
	while = {
		count = 2
		create_pop = {
			species = event_target:hologanglion_species
			ethos = owner
		}
	}

	# holowarriors
	create_species = {
		is_mod = no
		name = NAME_holowarrior
		plural = NAME_holowarrior_plural
		adjective = NAME_holowarrior_adjective
		name_list = event_target:holooverseer_species
		class = event_target:holooverseer_species
		homeworld = THIS
		traits = event_target:holooverseer_species
		# pops_can_be_colonizers = no
		# pops_can_reproduce = no
	}
	modify_species = {
		species = last_created_species
		change_scoped_species = yes
		remove_trait = trait_holooverseer
		add_trait = trait_holowarrior
		effect = {
			change_species_portrait = holofrixit_warrior_01
			# change_species_characteristics = {
			# 	pops_can_be_colonizers = no
			# 	pops_can_join_factions = no
			# }
			set_citizenship_type = {
				type = citizenship_slavery
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_living_standard = {
				type = living_standard_normal
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_slavery_type = {
				type = slavery_military
				country = event_target:holofrixit_country
				cooldown = no
			}
			save_event_target_as = holowarrior_species
		}
	}
	create_pop = {
		species = event_target:holowarrior_species
		ethos = random
	}

	# holofrixigrams
	create_species = {
		is_mod = no
		name = NAME_holofrixigram
		plural = NAME_holofrixigram_plural
		adjective = NAME_holofrixigram_adjective
		name_list = event_target:holooverseer_species
		class = event_target:holooverseer_species
		homeworld = THIS
		traits = event_target:holooverseer_species
		# pops_can_migrate = no
		# pops_can_be_colonizers = no
		# pops_can_reproduce = no
	}
	modify_species = {
		species = last_created_species
		# ideal_planet_class = THIS
		change_scoped_species = yes
		remove_trait = trait_holooverseer
		add_trait = trait_holofrixigram
		add_trait = trait_mechanical # needed for robot servitude
		effect = {
			change_species_portrait = holofrixigram
			# change_species_characteristics = {
			# 	pops_can_migrate = no
			# 	pops_can_be_colonizers = no
			# 	pops_can_reproduce = no
			# }
			set_citizenship_type = {
				type = citizenship_robot_servitude
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_living_standard = {
				type = living_standard_servitude
				country = event_target:holofrixit_country
				cooldown = no
			}
			save_event_target_as = holofrixigram_species
		}
	}
	while = {
		count = 6
		create_pop = {
			species = event_target:holofrixigram_species
			ethos = random
		}
	}
	owner = { set_built_species = event_target:holofrixigram_species }

	# holodrones
	create_species = {
		is_mod = no
		name = NAME_drone
		plural = NAME_drone_plural
		adjective = NAME_drone_adjective
		name_list = event_target:holooverseer_species
		class = event_target:holooverseer_species
		homeworld = THIS
		traits = event_target:holooverseer_species
		# can_generate_leaders = no
		# pops_can_join_factions = no
		effect = {
			save_event_target_as = holodrone_species
		}
	}
	modify_species = {
		species = last_created_species
		# ideal_planet_class = THIS
		change_scoped_species = yes
		portrait = holofrixit_drone_01
		remove_trait = trait_holooverseer
		add_trait = trait_holodrone
		effect = {
			change_species_portrait = holofrixit_drone_01
			change_species_characteristics = {
				can_generate_leaders = no
				pops_can_join_factions = no
			}
			set_citizenship_type = {
				type = citizenship_slavery
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_living_standard = {
				type = living_standard_normal
				country = event_target:holofrixit_country
				cooldown = no
			}
			set_slavery_type = {
				type = slavery_indentured
				country = event_target:holofrixit_country
				cooldown = no
			}
			save_event_target_as = holodrone_species
		}
	}
	while = {
		count = 13
		create_pop = {
			species = event_target:holodrone_species
			ethos = random
		}
	}
	# this will make them the same... not sure if it'll make them a subspecies tho
	# set_species_identity = <target>
}

# refer to 01_planetary_deposits.txt for the potential for each deposit
# THIS = planet
add_random_3_generator_district_deposit = {
	if = {
		limit = {
			OR = {
				is_planet_class = pc_arctic
				is_planet_class = pc_tundra
				is_planet_class = pc_savannah
				is_planet_class = pc_desert
				is_planet_class = pc_arid
			}
		}
		add_deposit = d_geothermal_vent
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_ocean
				is_planet_class = pc_nuked
			}
		}
		add_deposit = d_underwater_vent
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tropical
				is_planet_class = pc_alpine
				is_planet_class = pc_continental
			}
		}
		add_deposit = d_tempestous_mountain
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_gaia
				is_planet_class = pc_relic
			}
		}
		random_list = {
			50 = { add_deposit = d_underwater_vent }
			50 = { add_deposit = d_tempestous_mountain }
		}
	}
	else = {
		log_error = "unable to randomize size 3 generator deposit for class: \\[This.GetClassName]"
	}
}

# refer to 01_planetary_deposits.txt for the potential for each deposit
# THIS = planet
add_random_2_generator_district_deposit = {
	if = {
		limit = { is_wet = yes }
		add_deposit = d_rushing_waterfalls
	}
	else_if = {
		limit = {
			OR = {
				is_dry = yes
				is_planet_class = pc_nuked
			}
		}
		add_deposit = d_searing_desert
	}
	else_if = {
		limit = { is_cold = yes }
		add_deposit = d_frozen_gas_lake
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_gaia
				is_planet_class = pc_relic
			}
		}
		random_list = {
			50 = { add_deposit = d_searing_desert }
			50 = { add_deposit = d_frozen_gas_lake }
		}
	}
	else = {
		log_error = "unable to randomize size 2 generator deposit for class: \\[This.GetClassName]"
	}
}

# refer to 01_planetary_deposits.txt for the potential for each deposit
# THIS = planet
add_random_1_generator_district_deposit = {
	if = {
		limit = { is_dry = yes }
		add_deposit = d_arid_highlands
	}
	else_if = {
		limit = {
			OR = {
				is_cold = yes
				is_wet = yes
				is_planet_class = pc_nuked
			}
		}
		add_deposit = d_hot_springs
	}
	else_if = {
		limit = { is_planet_class = pc_gaia }
		add_deposit = d_buzzing_plains
	}
	else = {
		log_error = "unable to randomize size 1 generator deposit for class: \\[This.GetClassName]"
	}
}